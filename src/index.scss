@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');
// breakpoints for responsive
$breakpoints: (
  'xsmall': 576px,
  'small': 767px,
  'medium': 992px,
  'large': 1200px) !default;

@mixin respond-to($breakpoint) {

  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {

    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// variables
$primary-color : #88AAF3;
$secondary-color : #FDFDFD;
$light-gray: #dfdfdf;
$light-blue: #C5E8FF;
$header-color: #56606E;
$white : #fff;
$primary-font : 'Roboto',
sans-serif;

html {
  font-size: 10px !important;
}

a {
  text-decoration: none !important;
  font-size: 1.8rem;
}

p {
  font-size: 1.5rem !important;
}

body {
  position: relative;
  height: 100%;
  overflow-x: hidden;
  font-family: $primary-font !important;
}


ul {
  list-style-type: none;
  padding: 0 !important;
}



.page-wrapper {
  display: flex;

  .content {
    width: 100%;
    height: 100%;
    margin-left: 250px;
    padding: 2rem;
    position: relative;

    @include respond-to("medium") {
      margin-left: 150px;
    }

    @include respond-to("small") {
      margin-left: 100px;
    }

  }

  .content-full{
    margin-left: 0px;
    transition:  all .3s ease;
  }
}


form {

  h2 {
    font-size: 2.5rem !important;
    color: $header-color;
    margin-bottom: 2rem;
  }

  label{
    font-size: 1.6rem;
  }

  input {
    width: 100%;
    border: none;
    border: 1px solid $light-blue;
    margin: 1rem 0;
    padding: 1rem;
    outline: none;
    font-size: 2rem;
    font-weight: 500;
    letter-spacing: .5px;
  }

}