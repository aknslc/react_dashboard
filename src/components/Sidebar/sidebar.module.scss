@use "../../index.scss" as mixin;

// breakpoints for responsive
$breakpoints: (
    'xsmall': 576px,
    'small': 767px,
    'medium': 992px,
    'large': 1200px) !default;

@mixin respond-to($breakpoint) {

    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {

        // Prints a media query based on the value
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
}

.sideBarContainer {
    width: 250px;
    height: 100vh;
    background-color: mixin.$white;
    border-right: 1px solid mixin.$light-blue;
    padding: 1.5rem 1rem;

    .sideBarHeader {
        padding-bottom: 2rem;
        width: 100%;

        h1 {
            font-size: 2rem;
            color: mixin.$header-color;
            text-align: center !important;
        }
    }

    .sideBarItems {
        margin-top: 3rem;


        .active {
            background-color: mixin.$light-blue;
            transition: all .25s ease;

            &::before {
                content: "";
                width: 8px;
                height: 100%;
                margin-right: calc(1rem - 8px
                );
        }
    }

    .sideBarItem {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin: 2rem 0;
        padding: 1rem;
        border-radius: 1.2rem;

        &:hover {
            cursor: pointer;
        }

        .sideBarItemIcon {
            font-size: 2.5rem;
            color: mixin.$primary-color;
            margin-right: 5px;
            @include respond-to("medium"){
                width: 100%;
            }
        }


        .itemTitle {
            color: gray !important;
            font-size: 1.4rem !important;
            text-transform: uppercase;
            letter-spacing: .5px;

            @include respond-to("medium"){
                display: none;
            }


            &:hover {
                cursor: pointer;
                opacity: .7;
            }


        }



    }
}
}